workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_REF_NAME == "116-ci-improvements"'


variables:
  CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/cache/cypress
  POT_CI_ENABLE_DEPLOY_PROD_JOB: 'true'
  POT_CI_ENABLE_FLIP_PROD_JOB: 'true'


include:
  - project: 'potato/own-things/quality/gitlab-ci-includes'
    file: 'deploy/firebase.deploy.gitlab-ci.yml'
    ref: '10-firebase-deploy-inc'


image: node:14.15.4-alpine3.12


cache: &fe_deps
  key:
    files:
      - package.json
  paths:
    - node_modules/
    - cache/cypress/
  untracked: true
  policy: pull


stages:
  - Prep
  - Build
  - Test
  - Deploy


# PREP STAGE
# Install deps if package.json or package-lock.json changed
Install deps:
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
    - changes:
      - package.json
      - package-lock.json
  stage: Prep
  cache:
    <<: *fe_deps
    policy: push
  interruptible: true
  script:
    - npm ci


# BUILD STAGE
Build:
  stage: Build
  artifacts:
    paths:
      - dist
    expire_in: 1 week
  interruptible: true
  script:
    - npm run build

Lint:
  stage: Build
  cache: {}
  script:
    - DEPS='stylelint stylelint-config-standard stylelint-order stylelint-scss @typescript-eslint/eslint-plugin @typescript-eslint/parser eslint'
    - for DEP in $DEPS; do
        npm i $DEP@`node -p -e "require('./package.json').devDependencies['$DEP']"`;
      done
    - npm run lint


# # # BUILD FAIL STAGE
# # # If any task from build stage fails retry without using cache
# # Lint without cache:
# #   extends: .lint
# #   stage: build fail
# #   when: on_failure
# #   before_script:
# #     - npm i --prefer-cache
# #   cache:
# #     <<: *fe_deps
# #     policy: push

# # Build without cache:
# #   extends: .build
# #   stage: build fail
# #   when: on_failure
# #   before_script:
# #     - npm i --prefer-cache


# TEST STAGE
.test:
  cache: {}
  stage: Test
  image: cypress/browsers:node14.15.0-chrome86-ff82
  interruptible: true
  artifacts:
    when: on_failure
    paths:
      - cypress/screenshots
    expire_in: 1 week
  script:
    - npm i cypress@`node -p -e "require('./package.json').devDependencies.cypress"`;
    - npm run test:ci:prep
    - npm run test:ci:$BROWSER

Chrome:
  extends: .test
  variables:
    BROWSER: 'chrome'

Firefox:
  extends: .test
  variables:
    BROWSER: 'firefox'

# Edge not working atm need to investigate why
# Edge:
#   extends: .test
#   image: cypress/browsers:node14.10.1-edge88
#   allow_failure: true
#   variables:
#     BROWSER: 'edge'


# DEPLOY STAGE
.deploy_job:
  cache: {}
  needs: [Build]


Deploy Staging:
  rules:
    - if: '$CI_COMMIT_REF_NAME == "116-ci-improvements"'

Deploy Named Version Staging:
  needs: [Build]
  rules:
    - if: '$CI_COMMIT_REF_NAME == "116-ci-improvements"'
