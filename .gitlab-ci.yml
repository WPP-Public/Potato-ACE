variables:
  CYPRESS_CACHE_FOLDER: 'cypress-cache/'

image: node:13.1.0-alpine3.10

stages:
  - prepare
  - build
  - test
  - deploy


cache:
  key: deps
  paths:
    - .npm/
    - node_modules/
    - cypress-cache/
  policy: pull


# PREPARE STAGE
# Only install deps if package.json or package-lock.json changed
Install dependencies:
  stage: prepare
  before_script:
    - echo $CYPRESS_CACHE_FOLDER
  script:
    - npm ci --cache .npm --prefer-offline
  cache:
    key: deps
    paths:
      - .npm/
      - node_modules/
      - cypress-cache/
    policy: push
  # rules:
  #   - changes:
  #     - package.json
  #     - package-lock.json


# BUILD STAGE
Build:
  stage: build
  script:
    - npm run lint
    - npm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week


# TEST STAGE
.test:
  stage: test
  before_script:
    - echo $CYPRESS_CACHE_FOLDER
  artifacts:
    when: always
    paths:
      - cypress/screenshots/
      - cypress/videos/
    expire_in: 1 week


Chrome and Firefox:
  extends: .test
  image: cypress/browsers:node13.1.0-chrome78-ff70
  script:
    - npm rebuild node-sass
    - npm run test:chrome
    - npm run test:firefox


Edge:
  extends: .test
  image: cypress/base:13.1.0
  tags:
    - windows
  script:
    - npm ci --cache .npm --prefer-offline
    - npm run test:edge
  cache:
    key: windows-deps
    paths:
      - .npm/
      - node_modules/
      - cypress-cache/


# DEPLOY STAGE
# Deploy:
#   stage: deploy
#   only:
#     - master
#     - test
#   before_script:
#     - npm i -g firebase-tools
#   script:
#     - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY
