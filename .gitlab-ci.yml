image: node:13.1.0-alpine3.10


variables:
  npm_config_cache: '$CI_PROJECT_DIR/.npm'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/cypress'


cache:
  key: deps
  paths:
    - .npm
    - node_modules
    - cache/cypress
  policy: pull


stages:
  - prepare
  - build
  - test
  - deploy


# workflow:
#   rules:
#     - if: $CI_MERGE_REQUEST_ID # Execute jobs in merge request context
#     - if: $CI_COMMIT_BRANCH == 'master' # Execute jobs when a new commit is pushed to master



# PREPARE STAGE
# Only install deps if package.json or package-lock.json changed
Install deps:
  stage: prepare
  script:
    - npm ci --prefer-offline
  cache:
    key: deps
    paths:
      - .npm
      - node_modules
      - cache/cypress
    policy: pull-push
  only:
    changes:
      - package.json
      - package-lock.json



# BUILD STAGE
Lint:
  stage: build
  script:
    - npm run lint


Build:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - dist
    expire_in: 1 week


# TEST STAGE
.test:
  stage: test
  image: cypress/browsers:node13.1.0-chrome78-ff70
  script:
    - npm run test:ci:$BROWSER
  artifacts:
    when: on_failure
    paths:
      - cypress/screenshots
    expire_in: 1 week

.chrome-test:
  extends: .test
  variables:
    BROWSER: 'chrome'

Chrome 1:
  extends: .chrome-test

Chrome 2:
  extends: .chrome-test

Chrome 3:
  extends: .chrome-test


.firefox-test:
  extends: .test
  variables:
    BROWSER: 'firefox'

Firefox 1:
  extends: .firefox-test

Firefox 2:
  extends: .firefox-test

Firefox 3:
  extends: .firefox-test


# DEPLOY STAGE
Deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == 'test'
  before_script:
    - npm i -g firebase-tools
  script:
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY
