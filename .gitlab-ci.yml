image: node:14.15.4-alpine3.12


variables:
  CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/cache/cypress


cache: &fe_deps
  key:
    files:
      - package.json
      - package-lock.json
  paths:
    - node_modules/
    - .cache/*
    - cache/cypress/
  untracked: true
  policy: pull


stages:
  - Prep
  - Build
  - Test
  - Deploy


# PREPARE STAGE
.deps:
  script:
    - npm ci
  cache:
    <<: *fe_deps
    policy: push


# Install deps if package.json or package-lock.json changed
Install deps:
  stage: Prep
  extends: .deps
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
    - changes:
      - package.json
      - package-lock.json
  cache:
    <<: *fe_deps
    policy: push


# BUILD STAGE
Lint:
  stage: Build
  script:
    - npx stylelint "src/**/*.scss"

Build:
  stage: Build
  script:
    - npm run build
  artifacts:
    paths:
      - dist
    expire_in: 1 week


# TEST STAGE
.test:
  stage: Test
  image: cypress/browsers:node14.15.0-chrome86-ff82
  script:
    - npm run test:ci:prep
    - npm run test:ci:$BROWSER
  artifacts:
    when: on_failure
    paths:
      - cypress/screenshots
    expire_in: 1 week

Chrome:
  extends: .test
  variables:
    BROWSER: 'chrome'

Firefox:
  extends: .test
  variables:
    BROWSER: 'firefox'

# Edge not working atm need to investigate why
# Edge:
#   image: cypress/browsers:node14.10.1-edge88
#   extends: .test
#   variables:
#     BROWSER: 'edge'


# DEPLOY STAGE
Deploy:
  image: andreysenov/firebase-tools
  cache: {}
  stage: Deploy
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
  script:
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY






# # Install deps when merging into master
# Install deps for deploy:
#   stage: Prep
#   extends: .deps
#   rules:


# # BUILD STAGE
# .lint:
#   script:
#     - npm run lint

# .build:
#   script:
#     - npm run build
#   artifacts:
#     paths:
#       - dist
#     expire_in: 1 week

# Lint:
#   extends: .lint
#   stage: build

# Build:
#   extends: .build
#   stage: build


# # BUILD FAIL STAGE
# # If any task from build stage fails retry without using cache
# Lint without cache:
#   extends: .lint
#   stage: build fail
#   when: on_failure
#   before_script:
#     - npm i --prefer-cache
#   cache:
#     <<: *fe_deps
#     policy: push

# Build without cache:
#   extends: .build
#   stage: build fail
#   when: on_failure
#   before_script:
#     - npm i --prefer-cache
