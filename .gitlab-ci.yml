workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_TAG'


.use_prod_vars:
  script:
    - echo 'use Prod vars'
.deploy:
  script:
    - echo 'Deploy!'


include:
  - project: 'potato/own-things/quality/gitlab-ci-includes'
    file: 'deploy/gcp/gcp.deploy.gitlab-ci.yml'
    ref: 'test'


stages:
  - Deploy


Test:
  stage: Deploy
  script:
    - echo 'Test'




# variables:
#   CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/cache/cypress


# image: node:14.15.4-alpine3.12


# cache: &fe_deps
#   key:
#     files:
#       - package.json
#       - package-lock.json
#   paths:
#     - node_modules/
#     - .cache/*
#     - cache/cypress/
#   untracked: true
#   policy: pull


# stages:
#   - Prep
#   - Build
#   - Test
#   - Deploy


# # PREP STAGE
# # Install deps if package.json or package-lock.json changed
# Install deps:
#   stage: Prep
#   rules:
#     - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
#     - changes:
#       - package.json
#       - package-lock.json
#   cache:
#     <<: *fe_deps
#     policy: push
#   script:
#     - npm ci


# # BUILD STAGE
# Lint:
#   stage: Build
#   script:
#     - npm run lint

# Build:
#   stage: Build
#   script:
#     - npm run build
#   artifacts:
#     paths:
#       - dist
#     expire_in: 1 week


# # TEST STAGE
# .test:
#   stage: Test
#   image: cypress/browsers:node14.15.0-chrome86-ff82
#   script:
#     - npm run test:ci:prep
#     - npm run test:ci:$BROWSER
#   artifacts:
#     when: on_failure
#     paths:
#       - cypress/screenshots
#     expire_in: 1 week

# Chrome:
#   extends: .test
#   variables:
#     BROWSER: 'chrome'

# Firefox:
#   extends: .test
#   variables:
#     BROWSER: 'firefox'

# # Edge not working atm need to investigate why
# Edge:
#   extends: .test
#   image: cypress/browsers:node14.10.1-edge88
#   allow_failure: true
#   variables:
#     BROWSER: 'edge'


# # DEPLOY STAGE
# .deploy_script: &deploy_script
#   - POT_CI_ENVIRONMENT_URL='test'
#   - echo $POT_CI_DEPLOY_VERSION
#   - echo "POT_CI_ENVIRONMENT_URL=$POT_CI_ENVIRONMENT_URL" >> pot-ci-deployment-env-variables.env;
#   - echo "POT_CI_DEPLOY_VERSION=$POT_CI_DEPLOY_VERSION" >> pot-ci-deployment-env-variables.env;
#   # STAGING
#   # - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY


# .deploy:
#   stage: Deploy
#   image: andreysenov/firebase-tools
#   interruptible: true
#   artifacts:
#     reports:
#       dotenv: pot-ci-deployment-env-variables.env
#   environment:
#     url: $POT_CI_ENVIRONMENT_URL
#   script:
#     - *deploy_script
#   cache: {}


# Deploy MR:
#   extends: .deploy
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#   variables:
#     POT_CI_DEPLOY_VERSION: mr-$CI_MERGE_REQUEST_IID
#   environment:
#     deployment_tier: development
#     name: mr/$CI_MERGE_REQUEST_IID








# # .deps:
# #   script:
# #     - npm ci
# #   cache:
# #     <<: *fe_deps
# #     policy: push

# # # Install deps when merging into master
# # Install deps for deploy:
# #   stage: Prep
# #   extends: .deps
# #   rules:


# # # BUILD STAGE
# # .lint:
# #   script:
# #     - npm run lint

# # .build:
# #   script:
# #     - npm run build
# #   artifacts:
# #     paths:
# #       - dist
# #     expire_in: 1 week

# # Lint:
# #   extends: .lint
# #   stage: build

# # Build:
# #   extends: .build
# #   stage: build


# # # BUILD FAIL STAGE
# # # If any task from build stage fails retry without using cache
# # Lint without cache:
# #   extends: .lint
# #   stage: build fail
# #   when: on_failure
# #   before_script:
# #     - npm i --prefer-cache
# #   cache:
# #     <<: *fe_deps
# #     policy: push

# # Build without cache:
# #   extends: .build
# #   stage: build fail
# #   when: on_failure
# #   before_script:
# #     - npm i --prefer-cache


# firebase hosting:channel:list --token $POT_CI_FB_TOKEN
# firebase hosting:channel:deploy --expires 30d $POT_CI_DEPLOY_VERSION --token $POT_CI_FB_TOKEN
# firebase hosting:clone $POT_CI_FB_PROJECT_ID:$POT_CI_DEPLOY_VERSION $POT_CI_FB_PROJECT_ID:live
# `





include:
