image: node:13.1.0-alpine3.10


variables:
  npm_config_cache: '$CI_PROJECT_DIR/.npm'
  CYPRESS_CACHE_FOLDER: '$CI_PROJECT_DIR/cache/cypress'


cache:
  key: deps
  paths:
    - .npm
    - node_modules
    - cache/cypress
  policy: pull


stages:
  - prepare
  - build
  - test
  - deploy


# PREPARE STAGE
# Only install deps if package.json or package-lock.json changed
Install deps:
  stage: prepare
  script:
    # - echo 'CI_COMMIT_BRANCH >>>>>> ' $CI_COMMIT_BRANCH
    # - echo 'CI_COMMIT_REF_NAME >>>>>> ' $CI_COMMIT_REF_NAME
    - npm ci --prefer-offline
  cache:
    key: deps
    paths:
      - .npm
      - node_modules
      - cache/cypress
    policy: pull-push
  rules:
    - changes:
      - package.json
      - package-lock.json
    # - if: $CI_COMMIT_BRANCH == 'master'



# BUILD STAGE
Lint:
  stage: build
  script:
    - npm run lint

Build:
  stage: build
  script:
    - npm run build
  artifacts:
    paths:
      - dist
    expire_in: 1 week


# TEST STAGE
.test:
  stage: test
  image: cypress/browsers:node13.1.0-chrome78-ff70
  script:
    - npm run test:$BROWSER
  artifacts:
    when: on_failure
    paths:
      - cypress/screenshots/**/*.png
    expire_in: 1 week



Chrome 1:
  extends: .test
  variables:
    BROWSER: 'parallel'

Chrome 2:
  extends: .test
  variables:
    BROWSER: 'parallel'

Firefox:
  extends: .test
  variables:
    BROWSER: 'firefox'


# Edge:
  # extends: .test
  # image: cypress/base:13.1.0
  # tags:
  #   - windows
  # before_script:
  #   - npm ci --cache .npm --prefer-offline
  #   - apt-get install libgtk2.0-0 libgtk-3-0 libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
  # script:
  #   - start-server-and-test serve-build 3030 cypress:edge
  # cache:
  #   key: windows-deps
  #   paths:
  #     - .npm/
  #     - node_modules/
  #     - cypress-cache/


# DEPLOY STAGE
Deploy:
  stage: deploy
  only:
    - master
    - test
  before_script:
    - npm i -g firebase-tools
  script:
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY
