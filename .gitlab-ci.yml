image: node:14.15.4-alpine3.12


variables:
  npm_config_cache: $CI_PROJECT_DIR/.npm
  CYPRESS_CACHE_FOLDER: $CI_PROJECT_DIR/cache/cypress


cache: &global_cache
  key: ${CI_COMMIT_REF_NAME}
  paths:
    - .npm/
    - node_modules/
    - cache/cypress/
  policy: pull


stages:
  - prepare
  - build
  - build fail
  - test
  - deploy


# PREPARE STAGE
.deps:
  stage: prepare
  script:
    - npm set progress=false
    - npm ci --cache .npm --prefer-offline
  cache:
    <<: *global_cache
    policy: push

# Install deps if package.json or package-lock.json changed
Install deps:
  extends: .deps
  only:
    changes:
      - package.json
      - package-lock.json

# Install deps when merging into master
Install deps for deploy:
  extends: .deps
  only:
    - master



# BUILD STAGE
.lint:
  script:
    - npm run lint

.build:
  script:
    - npm run build
  artifacts:
    paths:
      - dist
    expire_in: 1 week

Lint:
  extends: .lint
  stage: build

Build:
  extends: .build
  stage: build


# BUILD FAIL STAGE
# If any task from build stage fails retry without using cache
Lint without cache:
  extends: .lint
  stage: build fail
  when: on_failure
  before_script:
    - npm i --prefer-cache
  cache:
    <<: *global_cache
    policy: push

Build without cache:
  extends: .build
  stage: build fail
  when: on_failure
  before_script:
    - npm i --prefer-cache



# TEST STAGE
.test:
  stage: test
  image: cypress/browsers:node14.15.0-chrome86-ff82
  script:
    - npm run test:ci:prep
    - npm run test:ci:$BROWSER
  artifacts:
    when: on_failure
    paths:
      - cypress/screenshots
    expire_in: 1 week

Chrome:
  extends: .test
  variables:
    BROWSER: 'chrome'

Firefox:
  extends: .test
  variables:
    BROWSER: 'firefox'

# Edge not working atm need to investigate why
# Edge:
#   image: cypress/browsers:node14.10.1-edge88
#   extends: .test
#   variables:
#     BROWSER: 'edge'


# DEPLOY STAGE
Deploy:
  image: andreysenov/firebase-tools
  cache: {}
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'
  script:
    - firebase deploy -m "Pipeline $CI_PIPELINE_ID, build $CI_BUILD_ID" --non-interactive --token $FIREBASE_DEPLOY_KEY

